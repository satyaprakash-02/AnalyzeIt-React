{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","class","onClick","toggleMode","htmlFor","TextForm","text","setText","useState","Fragment","heading","value","onChange","event","console","log","target","rows","preventDefault","newText","toLocaleUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","trim","split","filter","word","length","Alert","alert","role","msg","data-bs-dismiss","Footer","style","backgroundColor","color","App","setMode","setAlert","message","setTimeout","page","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.f75bdef6.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">About</Link> */}\r\n              {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"/about\">About</a> */}\r\n            </li>\r\n          </ul>\r\n          <form className={`d-flex text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <div class=\"form-check form-switch\">\r\n              <input class=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n            </div>\r\n            <div className=\"form-check form-switch\">\r\n              <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable{\" \"}{props.mode === 'light' ? 'dark' : 'light'}{\" \"}Mode</label>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,    //setting type of the property that will be loaded\r\n  page: PropTypes.string\r\n}\r\n\r\n// Navbar.defaultProps={\r\n//     title:'set Title',\r\n//     page:'Go to Home'           // Setting deafult proptype\r\n// }","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const[text,setText]=useState(\"\");\r\n    const handleUpEvent=(event)=>{\r\n        event.preventDefault();\r\n        let newText=text.toLocaleUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"! Changed to UpperCase\",\"success\");\r\n    }\r\n    const handleLowEvent=(event)=>{\r\n        event.preventDefault();\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"! Changed to LowerCase\",\"success\");\r\n    }\r\n    const handleClearText=(event)=>{\r\n        event.preventDefault();\r\n        let newText=\"\";\r\n        setText(newText);\r\n        props.showAlert(\"! Text Cleared\",\"success\");\r\n    }\r\n    const copyText=(event)=>{\r\n        var text=document.getElementById(\"inputbox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"! Text copied to Clipboard...\",\"success\");\r\n    }\r\n\r\n    const handleOnChange=(event)=>{\r\n        console.log(\"OnChange is clicked\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    // text is used to defind the old predefined text and setText is used as a function to change the text // react hooks is used\r\n  return (\r\n    <>\r\n    <div className=\"container1\">\r\n      <form>\r\n  <div className=\"mb-3\">\r\n    <label htmlFor=\"myBox\" className=\"form-label\"><h1>{props.heading}</h1></label>\r\n    <textarea type=\"text\" className=\"form-control\" id=\"inputbox\" value={text} onChange={handleOnChange} rows=\"6\"/>\r\n  </div>\r\n  </form>\r\n  <div className=\"control\">\r\n    <button type=\"submit\" className=\"btn btn-primary\" onClick={handleUpEvent} >Upper Case</button>\r\n    <button type=\"submit\" className=\"btn btn-primary\" onClick={handleLowEvent} >Lower Case</button>\r\n    <button type=\"submit\" className=\"btn btn-primary\" onClick={handleClearText} >Clear Text</button>\r\n    <button type=\"submit\" className=\"btn btn-primary\" onClick={copyText} >Copy Text</button>\r\n  </div>\r\n  \r\n\r\n    </div>\r\n    <div className=\"container2\">\r\n      <div className=\"heading\">\r\n      <h3>Your text summary !</h3>\r\n      </div>\r\n      <p id=\"summary\">{text.trim().split(/\\s+/).filter(word => word.length > 0).length} words and {text.length} characters.</p>\r\n    </div>\r\n    <div className=\"preview\">\r\n      <h4>Preview:</h4>\r\n      <p>{text}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.alert.type}</strong>{props.alert.msg}\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <div className=\"footer-container\">\r\n      <footer className=\"bg-body-tertiary text-center\">\r\n        <div className=\"text-center p-3\" style={{ backgroundColor: 'rgba(0, 0, 0, 0.05)', color:'black' }}>\r\n          © 2024 Copyright:\r\n          <a className=\"text-body\" href=\"\"> satyaprakash682002@gmail.com</a>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React from \"react\";\nimport About from './components/About';\nimport Footer from './components/Footer';\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type.toLowerCase().trim()\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#29386f';\n      document.body.style.color = 'white';\n      showAlert(\"Dark mode Enabled\", \" Success ! \");\n\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showAlert(\"Light mode Enabled \", \" Success ! \");\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"AnalyzeIt\" page=\"About\" mode={mode} toggleMode={toggleMode} />\n        {/* <Navbar />    */}\n        {/* // Default proptype loading */}\n\n        {/* // Container is a bootstrap class that provides a container to make appealing */}\n        <Alert alert={alert} />\n        {/* <Routes> */}\n          {/* <Route path=\"/\" element={<div className=\"container\">\n            <TextForm showAlert={showAlert} heading=\"Welcome to your Text Analyzer\" />\n          </div>} /> */}\n          {/* <Route path=\"/about\" element={<About />} /> */}\n\n        {/* </Routes> */}\n        {/* <Footer/> */}\n\n      {/* </Router> */}\n      <div className=\"container\">\n            <TextForm showAlert={showAlert} heading=\"Welcome to your Text Analyzer\" />\n          </div>\n          <Footer/>\n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}